syntax = "proto3";

package auth;

option go_package = "/internal/proto/";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// User Account Service
service UserAccountService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUserById(GetUserByIdRequest) returns (User);
  rpc GetUsersByUsername(GetUsersByUsernameRequest) returns (GetUsersByUsernameResponse);
  rpc UpdateUser(UpdateUserRequest) returns (User);
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
}

// Authentication Service
service AuthenticationService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (google.protobuf.Empty);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
}

// Email Service
service EmailService {
  rpc SendVerificationEmail(SendVerificationEmailRequest) returns (google.protobuf.Empty);
  rpc VerifyEmail(VerifyEmailRequest) returns (google.protobuf.Empty);
}

// Password Service
service PasswordService {
  rpc RequestPasswordReset(RequestPasswordResetRequest) returns (google.protobuf.Empty);
  rpc ResetPassword(ResetPasswordRequest) returns (google.protobuf.Empty);
}

// Session Management Service
service SessionManagementService {
  rpc GetUserSessions(GetUserSessionsRequest) returns (GetUserSessionsResponse);
  rpc DeleteSession(DeleteSessionRequest) returns (google.protobuf.Empty);
}

// User Role Service
service UserRoleService {
  rpc GetUserRoles(GetUserRolesRequest) returns (GetUserRolesResponse);
  rpc AddUserRole(AddUserRoleRequest) returns (google.protobuf.Empty);
  rpc RemoveUserRole(RemoveUserRoleRequest) returns (google.protobuf.Empty);
}

// Avatar Service
service AvatarService {
  rpc UpdateUserAvatar(UpdateUserAvatarRequest) returns (google.protobuf.Empty);
  rpc GetUserAvatarHistory(GetUserAvatarHistoryRequest) returns (GetUserAvatarHistoryResponse);
}

// Updated Key Management Service
service KeyManagementService {
  rpc UpdateUserKeys(UpdateUserKeysRequest) returns (google.protobuf.Empty);
  rpc VerifyUserKey(VerifyUserKeyRequest) returns (google.protobuf.Empty);
  rpc GeneratePostQuantumKeys(GeneratePostQuantumKeysRequest) returns (GeneratePostQuantumKeysResponse);
  rpc PerformKeyExchange(PerformKeyExchangeRequest) returns (PerformKeyExchangeResponse);
}

// Device Management Service
service DeviceManagementService {
  rpc RevokeDevice(RevokeDeviceRequest) returns (google.protobuf.Empty);
}

// Account Recovery Service
service AccountRecoveryService {
  rpc InitiateAccountRecovery(InitiateAccountRecoveryRequest) returns (InitiateAccountRecoveryResponse);
  rpc CompleteAccountRecovery(CompleteAccountRecoveryRequest) returns (google.protobuf.Empty);
}

// User Status Service
service UserStatusService {
  rpc StreamUserStatus(stream UserStatusUpdate) returns (stream UserStatusUpdate);
}

// Updated ChatService
service ChatService {
  // Direct messaging
  rpc InitiateSecureChat(InitiateSecureChatRequest) returns (InitiateSecureChatResponse);
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
  rpc ReceiveMessages(ReceiveMessagesRequest) returns (stream EncryptedMessage);
  rpc UpdateMessageStatus(UpdateMessageStatusRequest) returns (UpdateMessageStatusResponse);
  rpc ReplyToMessage(ReplyToMessageRequest) returns (ReplyToMessageResponse);
  rpc ForwardMessage(ForwardMessageRequest) returns (ForwardMessageResponse);
  rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse);
  rpc RequestMissingMessages(RequestMissingMessagesRequest) returns (GetMessagesResponse);

  // Group chat
  rpc CreatePublicGroupChat(CreatePublicGroupChatRequest) returns (CreateGroupResponse);
  rpc CreatePrivateGroupChat(CreatePrivateGroupChatRequest) returns (CreateGroupResponse);
  rpc JoinPublicGroupChat(JoinPublicGroupChatRequest) returns (JoinGroupResponse);
  rpc CreateChatInvitation(CreateChatInvitationRequest) returns (CreateChatInvitationResponse);
  rpc JoinPrivateGroupChat(JoinPrivateGroupChatRequest) returns (JoinGroupResponse);
  rpc UpdateGroupInfo(UpdateGroupInfoRequest) returns (UpdateGroupInfoResponse);
  rpc AddGroupMember(AddGroupMemberRequest) returns (google.protobuf.Empty);
  rpc RemoveGroupMember(RemoveGroupMemberRequest) returns (google.protobuf.Empty);
  rpc UpdateGroupEncryption(UpdateGroupEncryptionRequest) returns (google.protobuf.Empty);
  rpc SendGroupMessage(GroupMessageRequest) returns (google.protobuf.Empty);
  rpc RequestMissingGroupMessages(RequestMissingGroupMessagesRequest) returns (GetMessagesResponse);

  // User management in chats
  rpc BanUser(BanUserRequest) returns (BanUserResponse);
  rpc UnbanUser(UnbanUserRequest) returns (UnbanUserResponse);
  rpc UpdateUserRole(UpdateUserRoleRequest) returns (UpdateUserRoleResponse);
  rpc CreateCustomRole(CreateCustomRoleRequest) returns (CreateCustomRoleResponse);

  // Chat features
  rpc CreateInviteLink(CreateInviteLinkRequest) returns (CreateInviteLinkResponse);
  rpc PinMessage(PinMessageRequest) returns (PinMessageResponse);
  rpc UnpinMessage(UnpinMessageRequest) returns (UnpinMessageResponse);

  // Room management
  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse);
  rpc UpdateRoom(UpdateRoomRequest) returns (UpdateRoomResponse);
  rpc DeleteRoom(DeleteRoomRequest) returns (DeleteRoomResponse);

  // Chat history
  rpc TransferChatHistory(TransferChatHistoryRequest) returns (TransferChatHistoryResponse);
}

// New service for network management
service NetworkManagementService {
  rpc RegisterNode(RegisterNodeRequest) returns (RegisterNodeResponse);
  rpc UpdateNodeStatus(UpdateNodeStatusRequest) returns (google.protobuf.Empty);
  rpc GetNodeInfo(GetNodeInfoRequest) returns (NodeInfo);
}

// New service for DHT operations
service DHTService {
  rpc Put(DHTPutRequest) returns (google.protobuf.Empty);
  rpc Get(DHTGetRequest) returns (DHTGetResponse);
  rpc FindNode(FindNodeRequest) returns (FindNodeResponse);
}

// New service for reputation management
service ReputationService {
  rpc UpdateNodeReputation(UpdateNodeReputationRequest) returns (google.protobuf.Empty);
  rpc GetNodeReputation(GetNodeReputationRequest) returns (GetNodeReputationResponse);
}

// Enums

enum EncryptionAlgorithm {
  ED521 = 0;
  AES_256_GCM = 1;
  SHA3_256 = 2;
  KYBER1024 = 3;
  DILITHIUM3 = 4;
}

enum NodeType {
  FULL_NODE = 0;
  LIGHT_NODE = 1;
  SERVICE_NODE = 2;
}

enum NodeStatus {
  ONLINE = 0;
  OFFLINE = 1;
  BUSY = 2;
}

enum MessageStatus {
  SENT = 0;
  DELIVERED = 1;
  READ = 2;
}

// Message definitions

message User {
  string id = 1;
  string username = 2;
  string email = 3;
  optional string bio = 4;
  optional string current_avatar_url = 5;
  bool is_verified = 6;
  google.protobuf.Timestamp last_login = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  string account_status = 10;
  bool two_factor_enabled = 11;
  google.protobuf.Timestamp last_password_change = 12;
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  optional string bio = 3;
  bytes password_hmac = 4;
  bytes salt = 5;
  bytes public_identity_key = 6;
  bytes public_signed_pre_key = 7;
  bytes signed_pre_key_signature = 8;
  repeated bytes public_one_time_pre_keys = 9;
  bytes public_kyber_key = 10;
  bytes encrypted_private_keys = 11;
}

message CreateUserResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
}

message GetUserByIdRequest {
  string id = 1;
}

message GetUsersByUsernameRequest {
  string username = 1;
}

message GetUsersByUsernameResponse {
  repeated User users = 1;
}

message UpdateUserRequest {
  string id = 1;
  optional string username = 2;
  optional string email = 3;
  optional string bio = 4;
}

message DeleteUserRequest {
  string id = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
}

message LogoutRequest {
  string access_token = 1;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message SendVerificationEmailRequest {
  string user_id = 1;
}

message VerifyEmailRequest {
  string email = 1;
  string code = 2;
}

message RequestPasswordResetRequest {
  string email = 1;
}

message ResetPasswordRequest {
  string email = 1;
  string code = 2;
  string new_password = 3;
}

message GetUserSessionsRequest {
  string user_id = 1;
}

message GetUserSessionsResponse {
  repeated Session sessions = 1;
}

message Session {
  string id = 1;
  string user_id = 2;
  string device_info = 3;
  string ip_address = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp expires_at = 6;
}

message DeleteSessionRequest {
  string session_id = 1;
}

message GetUserRolesRequest {
  string user_id = 1;
}

message GetUserRolesResponse {
  repeated string roles = 1;
}

message AddUserRoleRequest {
  string user_id = 1;
  string role = 2;
}

message RemoveUserRoleRequest {
  string user_id = 1;
  string role = 2;
}

message UpdateUserAvatarRequest {
  string user_id = 1;
  string avatar_url = 2;
}

message GetUserAvatarHistoryRequest {
  string user_id = 1;
}

message GetUserAvatarHistoryResponse {
  repeated AvatarHistory history = 1;
}

message AvatarHistory {
  string avatar_url = 1;
  google.protobuf.Timestamp changed_at = 2;
}

message UpdateUserKeysRequest {
  string user_id = 1;
  bytes new_identity_public_key = 2;
  bytes new_signed_pre_key_public = 3;
  bytes new_signed_pre_key_signature = 4;
  repeated bytes new_one_time_pre_keys_public = 5;
  bytes new_kyber_public_key = 6;
  bytes old_key_signature = 7;
}

message VerifyUserKeyRequest {
  string verifier_id = 1;
  string verified_id = 2;
  int64 timestamp = 3;
}

message GeneratePostQuantumKeysRequest {
  string user_id = 1;
}

message GeneratePostQuantumKeysResponse {
  bytes public_kyber_key = 1;
  bytes encrypted_private_kyber_key = 2;
  bytes public_dilithium_key = 3;
  bytes encrypted_private_dilithium_key = 4;
}

message PerformKeyExchangeRequest {
  string initiator_id = 1;
  string recipient_id = 2;
  bytes ephemeral_key = 3;
  bytes kyber_ciphertext = 4;
}

message PerformKeyExchangeResponse {
  bytes shared_secret = 1;
}

message RevokeDeviceRequest {
  string user_id = 1;
  string device_id = 2;
  bytes signature = 3;
}

message InitiateAccountRecoveryRequest {
  string username_or_email = 1;
  repeated string secret_question_answers = 2;
  optional string recovery_code = 3;
}

message InitiateAccountRecoveryResponse {
  string recovery_session_id = 1;
}

message CompleteAccountRecoveryRequest {
  string recovery_session_id = 1;
  string one_time_code = 2;
  bytes new_identity_public_key = 3;
  bytes new_signed_pre_key_public = 4;
  bytes new_signed_pre_key_signature = 5;
  repeated bytes new_one_time_pre_keys_public = 6;
  bytes new_kyber_public_key = 7;
}

message UserStatusUpdate {
  string user_id = 1;
  bool is_online = 2;
  google.protobuf.Timestamp last_seen = 3;
}

message InitiateSecureChatRequest {
  string sender_id = 1;
  string recipient_id = 2;
  bytes ephemeral_key = 3;
  bytes kyber_ciphertext = 4;
  bytes encrypted_initial_message = 5;
  optional string used_one_time_pre_key_id = 6;
}

message InitiateSecureChatResponse {
  string chat_id = 1;
  bytes encrypted_response = 2;
}

message SendMessageRequest {
  string sender_id = 1;
  string recipient_id = 2;
  bytes encrypted_message = 3;
  bytes signature = 4;
  bytes ratchet_public_key = 5;
  int32 message_number = 6;
  int32 previous_chain_length = 7;
}

message SendMessageResponse {
  string message_id = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message ReceiveMessagesRequest {
  string user_id = 1;
  string last_message_id = 2;
}

message GetMessagesRequest {
  string user_id = 1;
  string last_message_id = 2;
}

message GetMessagesResponse {
  repeated EncryptedMessage messages = 1;
}

message EncryptedMessage {
  string message_id = 1;
  string sender_id = 2;
  string recipient_id = 3;
  bytes encrypted_content = 4;
  bytes signature = 5;
  int32 message_number = 6;
  google.protobuf.Timestamp timestamp = 7;
}

message UpdateMessageStatusRequest {
  string message_id = 1;
  string user_id = 2;
  MessageStatus status = 3;
}

message UpdateMessageStatusResponse {
  bool success = 1;
}

message ReplyToMessageRequest {
  string original_message_id = 1;
  SendMessageRequest reply_message = 2;
}

message ReplyToMessageResponse {
  string reply_message_id = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message ForwardMessageRequest {
  string message_id = 1;
  string target_chat_id = 2;
}

message ForwardMessageResponse {
  string forwarded_message_id = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message DeleteMessageRequest {
  string message_id = 1;
  string user_id = 2;
}

message DeleteMessageResponse {
  bool success = 1;
}

message RequestMissingMessagesRequest {
  string recipient_id = 1;
  string sender_id = 2;
  repeated int32 missing_message_numbers = 3;
}

message CreatePublicGroupChatRequest {
  string creator_id = 1;
  string group_name = 2;
  repeated string initial_member_ids = 3;
}

message CreatePrivateGroupChatRequest {
  string creator_id = 1;
  string group_name = 2;
  repeated string initial_member_ids = 3;
  repeated bytes encrypted_group_keys = 4;
}

message CreateGroupResponse {
  string group_id = 1;
}

message JoinPublicGroupChatRequest {
  string user_id = 1;
  string group_id = 2;
}

message JoinGroupResponse {
  bool success = 1;
  string group_id = 2;
}

message CreateChatInvitationRequest {
  string creator_id = 1;
  string group_id = 2;
  google.protobuf.Timestamp expiration = 3;
}

message CreateChatInvitationResponse {
  string invitation_code = 1;
}

message JoinPrivateGroupChatRequest {
  string user_id = 1;
  string invitation_code = 2;
}

message UpdateGroupInfoRequest {
  string group_id = 1;
  string updater_id = 2;
  optional string new_name = 3;
  optional string new_description = 4;
}

message UpdateGroupInfoResponse {
  bool success = 1;
}

message AddGroupMemberRequest {
  string group_id = 1;
  string admin_id = 2;
  string new_member_id = 3;
}

message RemoveGroupMemberRequest {
  string group_id = 1;
  string admin_id = 2;
  string member_to_remove_id = 3;
}

message UpdateGroupEncryptionRequest {
  string group_id = 1;
  string initiator_id = 2;
  repeated bytes encrypted_new_keys = 3;
  int32 new_message_number = 4;
}

message GroupMessageRequest {
  string group_id = 1;
  string sender_id = 2;
  bytes encrypted_message = 3;
  bytes signature = 4;
  int32 message_number = 5;
}

message RequestMissingGroupMessagesRequest {
  string group_id = 1;
  string user_id = 2;
  int32 last_received_message_number = 3;
}

message BanUserRequest {
  string admin_id = 1;
  string user_id = 2;
  string chat_id = 3;
  optional string reason = 4;
}

message BanUserResponse {
  bool success = 1;
}

message UnbanUserRequest {
  string admin_id = 1;
  string user_id = 2;
  string chat_id = 3;
}

message UnbanUserResponse {
  bool success = 1;
}

message UpdateUserRoleRequest {
  string admin_id = 1;
  string user_id = 2;
  string chat_id = 3;
  string new_role = 4;
}

message UpdateUserRoleResponse {
  bool success = 1;
}

message CreateCustomRoleRequest {
  string admin_id = 1;
  string chat_id = 2;
  string role_name = 3;
  repeated string permissions = 4;
}

message CreateCustomRoleResponse {
  bool success = 1;
  string role_id = 2;
}

message CreateInviteLinkRequest {
  string creator_id = 1;
  string chat_id = 2;
  optional int32 max_uses = 3;
  optional google.protobuf.Timestamp expiration = 4;
}

message CreateInviteLinkResponse {
  string invite_link = 1;
}

message PinMessageRequest {
  string user_id = 1;
  string message_id = 2;
  string chat_id = 3;
}

message PinMessageResponse {
  bool success = 1;
}

message UnpinMessageRequest {
  string user_id = 1;
  string message_id = 2;
  string chat_id = 3;
}

message UnpinMessageResponse {
  bool success = 1;
}

message CreateRoomRequest {
  string creator_id = 1;
  string room_name = 2;
  string room_type = 3;
}

message CreateRoomResponse {
  string room_id = 1;
}

message UpdateRoomRequest {
  string room_id = 1;
  string updater_id = 2;
  optional string new_name = 3;
  optional string new_type = 4;
}

message UpdateRoomResponse {
  bool success = 1;
}

message DeleteRoomRequest {
  string room_id = 1;
  string deleter_id = 2;
}

message DeleteRoomResponse {
  bool success = 1;
}

message TransferChatHistoryRequest {
  string user_id = 1;
  string source_device_id = 2;
  string target_device_id = 3;
  bytes encrypted_temp_key = 4;
}

message TransferChatHistoryResponse {
  bytes encrypted_history = 1;
}

// New messages for network management, DHT, and reputation

message NodeInfo {
  string node_id = 1;
  NodeType node_type = 2;
  string ip_address = 3;
  int32 port = 4;
  repeated string capabilities = 5;
  google.protobuf.Timestamp last_seen = 6;
}

message RegisterNodeRequest {
  NodeInfo node_info = 1;
  bytes public_key = 2;
  bytes signature = 3;
}

message RegisterNodeResponse {
  string node_id = 1;
  bytes network_certificate = 2;
}

message UpdateNodeStatusRequest {
  string node_id = 1;
  NodeStatus status = 2;
}

message GetNodeInfoRequest {
  string node_id = 1;
}

message DHTPutRequest {
  bytes key = 1;
  bytes value = 2;
  google.protobuf.Timestamp expiration = 3;
}

message DHTGetRequest {
  bytes key = 1;
}

message DHTGetResponse {
  bytes value = 1;
}

message FindNodeRequest {
  bytes node_id = 1;
}

message FindNodeResponse {
  repeated NodeInfo closest_nodes = 1;
}

message UpdateNodeReputationRequest {
  string node_id = 1;
  int32 reputation_change = 2;
  string reason = 3;
}

message GetNodeReputationRequest {
  string node_id = 1;
}

message GetNodeReputationResponse {
  int32 reputation_score = 1;
}
